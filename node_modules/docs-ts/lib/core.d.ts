import * as TE from 'fp-ts/lib/TaskEither';
import * as RTE from 'fp-ts/lib/ReaderTaskEither';
/**
 * capabilities
 */
export interface Eff<A> extends TE.TaskEither<string, A> {
}
export interface MonadFileSystem {
    readonly getFilenames: (pattern: string) => Eff<Array<string>>;
    readonly readFile: (path: string) => Eff<string>;
    readonly writeFile: (path: string, content: string) => Eff<void>;
    readonly existsFile: (path: string) => Eff<boolean>;
    readonly clean: (pattern: string) => Eff<void>;
}
export interface MonadLog {
    readonly info: (message: string) => Eff<void>;
    readonly log: (message: string) => Eff<void>;
    readonly debug: (message: string) => Eff<void>;
}
export interface Capabilities extends MonadFileSystem, MonadLog {
}
/**
 * App effect
 */
export interface AppEff<A> extends RTE.ReaderTaskEither<Capabilities, string, A> {
}
export declare const main: AppEff<void>;
